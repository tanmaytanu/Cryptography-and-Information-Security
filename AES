import base64
from Crypto.Cipher import AES
from Crypto.Random import get_random_bytes

# Define the plaintext and key
plaintext = b'This is a secret message'

# Generate a 16-byte (128-bit) random key
key = get_random_bytes(16)

# Create an AES cipher object in EAX mode (Authenticated Encryption with Associated Data)
cipher = AES.new(key, AES.MODE_EAX)

# Encrypt the plaintext
ciphertext, tag = cipher.encrypt_and_digest(plaintext)

# Print the encrypted ciphertext and authentication tag
print("Ciphertext (in bytes):", ciphertext)
print("Ciphertext (Base64-encoded):", base64.b64encode(ciphertext).decode())
print("Authentication Tag:", base64.b64encode(tag).decode())

# Decryption Process
# Create a new AES cipher object with the same key and nonce used during encryption
decrypt_cipher = AES.new(key, AES.MODE_EAX, nonce=cipher.nonce)

# Decrypt the ciphertext and verify with the authentication tag
decrypted_plaintext = decrypt_cipher.decrypt_and_verify(ciphertext, tag)

# Print the decrypted plaintext
print("Decrypted plaintext:", decrypted_plaintext.decode())
